{"version":3,"sources":["components/Cell.module.css","components/App.module.css","components/Board.module.css","reducers/game.js","reducers/index.js","actions/actionTypes.js","store.js","actions/actions.js","components/Cell.js","containers/Cell.js","components/Board.js","containers/Board.js","components/App.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","cells","boardCoordinates","x","y","blankCellCoordinates","isWin","moves","combineReducers","game","state","action","type","sort","Math","random","newCells","slice","node","payload","offsetLeft","offsetTop","cellIndex","blankIndex","findIndex","item","removed","splice","winArray1","winArray2","JSON","stringify","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","shuffleCells","DRAGGING_STYLE","zIndex","backgroundColor","Cell","props","squareRef","React","createRef","draggingStyle","isCellClicked","isCellMoved","isCellBlank","handleMouseDown","bind","handleMouseMove","handleMouseUp","this","value","current","setBlankCellCoordinates","setState","e","top","pageY","CELL_SIZE","left","pageX","index","clientX","clientY","reorderCells","incrementMoves","checkForWin","isCellDraggable","className","styles","cell","style","onMouseDown","onMouseMove","onMouseUp","ref","Component","connect","Board","boardRef","setBoardCoordinates","squareIndex","board","map","key","App","handleButtonClick","content","app","button","onClick","Boolean","location","hostname","match","ReactDOM","render","store","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fe7b17f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__qgszO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1FDxX\",\"button\":\"App_button__3AEEl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__1qKZw\"};","import {\r\n  SHUFFLE_CELLS,\r\n  SET_BOARD_COORDINATES,\r\n  SET_BLANK_CELL_COORDINATES,\r\n  REORDER_CELLS,\r\n  CHECK_FOR_WIN,\r\n  INCREMENT_MOVES,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  cells: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0],\r\n  boardCoordinates: {\r\n    x: null,\r\n    y: null,\r\n  },\r\n  blankCellCoordinates: {\r\n    x: null,\r\n    y: null,\r\n  },\r\n  isWin: null,\r\n  moves: 0,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SHUFFLE_CELLS: {\r\n      const { cells } = state;\r\n      cells.sort(() => Math.random() - 0.5);\r\n      const newCells = cells.slice();\r\n      \r\n      return {\r\n        ...state,\r\n        cells: newCells,\r\n        isWin: false,\r\n        moves: 0\r\n      };\r\n    }\r\n\r\n    case SET_BOARD_COORDINATES: {\r\n      const { node } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        boardCoordinates: {\r\n          x: node.offsetLeft,\r\n          y: node.offsetTop,\r\n        },\r\n      };\r\n    }\r\n\r\n    case SET_BLANK_CELL_COORDINATES: {\r\n      const { node } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        blankCellCoordinates: {\r\n          x: node.offsetLeft,\r\n          y: node.offsetTop,\r\n        },\r\n      };\r\n    }\r\n\r\n    case REORDER_CELLS: {\r\n      const { cellIndex } = action.payload;\r\n      const { cells } = state;\r\n      let blankIndex = cells.findIndex(item => item === 0);\r\n      const removed = cells.splice(cellIndex, 1, 0);\r\n      cells.splice(blankIndex, 1, removed[0]);\r\n      const newCells = cells.slice();\r\n\r\n      return {\r\n        ...state,\r\n        cells: newCells,\r\n      };\r\n    }\r\n\r\n    case CHECK_FOR_WIN: {\r\n      const winArray1 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n      const winArray2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0];\r\n      const { cells } = state;\r\n\r\n      if (\r\n        JSON.stringify(cells) == JSON.stringify(winArray1) ||\r\n        JSON.stringify(cells) == JSON.stringify(winArray2)\r\n      ) {\r\n        return {\r\n          ...state,\r\n          isWin: true,\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case INCREMENT_MOVES: {\r\n      let { moves } = state;\r\n      moves++\r\n      \r\n      return {\r\n        ...state,\r\n        moves\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport game from \"./game\";\r\n\r\nexport default combineReducers({ game });\r\n","export const SHUFFLE_CELLS = \"SHUFFLE_CELLS\";\r\nexport const SET_BLANK_CELL_COORDINATES = \"SET_BLANK_CELL_COORDINATES\";\r\nexport const SET_BOARD_COORDINATES = \"SET_BOARD_COORDINATES\";\r\nexport const REORDER_CELLS = \"REORDER_CELLS\";\r\nexport const CHECK_FOR_WIN = \"CHECK_FOR_WIN\";\r\nexport const INCREMENT_MOVES = \"INCREMENT_MOVES\";\r\n","import { createStore, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default createStore(rootReducer, composeEnhancers());\r\n","import {\r\n  SHUFFLE_CELLS,\r\n  SET_BLANK_CELL_COORDINATES,\r\n  SET_BOARD_COORDINATES,\r\n  REORDER_CELLS,\r\n  CHECK_FOR_WIN,\r\n  INCREMENT_MOVES,\r\n} from \"./actionTypes\";\r\n\r\nexport const shuffleCells = () => ({ type: SHUFFLE_CELLS });\r\n\r\nexport const setBlankCellCoordinates = node => ({\r\n  type: SET_BLANK_CELL_COORDINATES,\r\n  payload: { node },\r\n});\r\n\r\nexport const setBoardCoordinates = node => ({\r\n  type: SET_BOARD_COORDINATES,\r\n  payload: { node },\r\n});\r\n\r\nexport const reorderCells = cellIndex => ({\r\n  type: REORDER_CELLS,\r\n  payload: { cellIndex },\r\n});\r\n\r\nexport const checkForWin = () => ({ type: CHECK_FOR_WIN });\r\n\r\nexport const incrementMoves = () => ({ type: INCREMENT_MOVES });","import React, { Component } from \"react\";\r\nimport styles from \"./Cell.module.css\";\r\n\r\nconst CELL_SIZE = 100;\r\nconst DRAGGING_STYLE = {\r\n  zIndex: 10,\r\n  backgroundColor: \"#111\",\r\n};\r\n\r\nclass Cell extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.squareRef = React.createRef();\r\n    this.state = {\r\n      draggingStyle: null,\r\n      isCellClicked: null,\r\n      isCellMoved: null,\r\n      isCellBlank: false,\r\n    };\r\n\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { value } = this.props;\r\n    const isCellBlank = value === 0;\r\n    if (isCellBlank) {\r\n      const squareRef = this.squareRef.current;\r\n      this.props.setBlankCellCoordinates(squareRef);\r\n      this.setState({ isCellBlank });\r\n    }\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    const { boardCoordinates } = this.props;\r\n\r\n    this.setState({\r\n      isCellClicked: true,\r\n      draggingStyle: {\r\n        top: e.pageY - boardCoordinates.y - CELL_SIZE / 2,\r\n        left: e.pageX - boardCoordinates.x - CELL_SIZE / 2,\r\n        ...DRAGGING_STYLE,\r\n      },\r\n    });\r\n  }\r\n\r\n  handleMouseMove(e) {\r\n    const { boardCoordinates } = this.props;\r\n\r\n    this.setState({\r\n      isCellMoved: true,\r\n      draggingStyle: {\r\n        top: e.pageY - boardCoordinates.y - CELL_SIZE / 2,\r\n        left: e.pageX - boardCoordinates.x - CELL_SIZE / 2,\r\n        ...DRAGGING_STYLE,\r\n      },\r\n    });\r\n  }\r\n\r\n  handleMouseUp(e) {\r\n    const { blankCellCoordinates, boardCoordinates, index } = this.props;\r\n\r\n    if (\r\n      e.clientX > blankCellCoordinates.x + boardCoordinates.x &&\r\n      e.clientX < blankCellCoordinates.x + boardCoordinates.x + CELL_SIZE * 2 &&\r\n      e.clientY > blankCellCoordinates.y + boardCoordinates.y &&\r\n      e.clientY < blankCellCoordinates.y + boardCoordinates.y + CELL_SIZE * 2\r\n    ) {\r\n      this.props.reorderCells(index);\r\n      this.props.incrementMoves();\r\n      this.props.checkForWin();\r\n      this.setState({\r\n        isCellClicked: false,\r\n        isCellMoved: false,\r\n        draggingStyle: null,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { value, isCellDraggable } = this.props;\r\n    const {\r\n      draggingStyle,\r\n      isCellClicked,\r\n      isCellMoved,\r\n      isCellBlank,\r\n    } = this.state;\r\n\r\n    if (isCellBlank) {\r\n      return <div className={styles.cell} />;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={draggingStyle}\r\n        className={styles.cell}\r\n        onMouseDown={isCellDraggable ? this.handleMouseDown : null}\r\n        onMouseMove={\r\n          isCellDraggable && isCellClicked ? this.handleMouseMove : null\r\n        }\r\n        onMouseUp={isCellDraggable && isCellMoved ? this.handleMouseUp : null}\r\n        ref={this.squareRef}\r\n      >\r\n        {value}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cell;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  setBlankCellCoordinates,\r\n  reorderCells,\r\n  checkForWin,\r\n  incrementMoves,\r\n} from \"../actions/actions\";\r\nimport Cell from \"../components/Cell\";\r\n\r\nconst mapStateToProps = state => {\r\n  const { cells, boardCoordinates, blankCellCoordinates } = state.game;\r\n\r\n  return {\r\n    cells,\r\n    boardCoordinates,\r\n    blankCellCoordinates,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setBlankCellCoordinates,\r\n  reorderCells,\r\n  checkForWin,\r\n  incrementMoves,\r\n})(Cell);\r\n","import React, { Component } from \"react\";\r\nimport Cell from \"../containers/Cell\";\r\nimport styles from \"./Board.module.css\";\r\n\r\nclass Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.boardRef = React.createRef();\r\n    this.isCellDraggable = this.isCellDraggable.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.shuffleCells();\r\n    const boardRef = this.boardRef.current;\r\n    this.props.setBoardCoordinates(boardRef);\r\n  }\r\n\r\n  isCellDraggable(index) {\r\n    const { cells } = this.props;\r\n    let blankIndex = cells.findIndex(item => item === 0);\r\n    blankIndex = blankIndex + 5;\r\n    const squareIndex = index + 5;\r\n\r\n    if (\r\n      squareIndex === blankIndex + 1 ||\r\n      squareIndex === blankIndex - 1 ||\r\n      squareIndex === blankIndex + 4 ||\r\n      squareIndex === blankIndex - 4\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    const { cells } = this.props;\r\n\r\n    return (\r\n      <div className={styles.board} ref={this.boardRef}>\r\n        {cells.map((value, index) => (\r\n          <Cell\r\n            key={`${index}_${value}`}\r\n            value={value}\r\n            index={index}\r\n            isCellDraggable={this.isCellDraggable(index)}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import { connect } from \"react-redux\";\r\nimport { setBoardCoordinates, shuffleCells } from \"../actions/actions\";\r\nimport Board from \"../components/Board\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cells: state.game.cells,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setBoardCoordinates, shuffleCells })(\r\n  Board\r\n);\r\n","import React, { Component } from \"react\";\r\nimport Board from \"../containers/Board\";\r\nimport styles from \"./App.module.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleButtonClick = this.handleButtonClick.bind(this);\r\n  }\r\n\r\n  handleButtonClick() {\r\n    this.props.shuffleCells();\r\n  }\r\n\r\n  render() {\r\n    const { isWin, moves } = this.props;\r\n    let content;\r\n\r\n    if (isWin) {\r\n      content = <h2>You Win!</h2>;\r\n    } else {\r\n      content = <Board />;\r\n    }\r\n\r\n    return (\r\n      <div className={styles.app}>\r\n        <h1>Fifteen Game</h1>\r\n        <p>Moves: {moves}</p>\r\n        {content}\r\n        <button className={styles.button} onClick={this.handleButtonClick}>\r\n          {isWin ? \"Play again!\" : \"Shuffle Cells\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { connect } from \"react-redux\";\r\nimport { shuffleCells } from \"../actions/actions\";\r\nimport App from \"../components/App\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isWin: state.game.isWin,\r\n    moves: state.game.moves,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { shuffleCells })(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}