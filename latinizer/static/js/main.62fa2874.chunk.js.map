{"version":3,"sources":["messages/index.ts","helpers/transliteration.ts","transliterate/index.ts","transliterate/czechify_uk.ts","transliterate/englify_uk.ts","transliterate/englify_ru.ts","components/FormBlock.tsx","components/App.tsx","index.tsx"],"names":["en","appLanguageLbl","appLanguageOptEn","appLanguageOptUk","appLanguageOptRu","appTitle","bgnPcgnHelpText","inputLanguageLbl","inputLanguageOptUk","inputLanguageOptRu","outputLanguageLbl","outputLanguageOptEn","outputLanguageOptCz","outputLanguageOptPl","inputLanguagePlaceholder","uk","ru","isCharsEqual","nextChar","char","toLowerCase","isConsonant","text","inputType","outputType","result","i","length","czechifyUk","englifyUk","englifyRu","FormBlock","useState","textToTransliterate","setTextToTransliterate","setInputType","setOutputType","output","setOutput","intl","useIntl","useEffect","transliterate","textInLowercase","indexOf","isRuInput","isUkInput","htmlFor","id","value","onChange","event","target","message","disabled","placeholder","formatMessage","App","appLanguage","setAppLanguage","messages","msgs","locale","defaultLocale","href","render","document","getElementById"],"mappings":"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","file":"static/js/main.62fa2874.chunk.js","sourcesContent":["export default {\r\n    en: {\r\n        appLanguageLbl: 'Language',\r\n        appLanguageOptEn: 'English',\r\n        appLanguageOptUk: 'Ukrainian',\r\n        appLanguageOptRu: 'Russian',\r\n        appTitle: 'Cyrillic to latin script converter',\r\n        bgnPcgnHelpText: '\"Englify\" option will convert cyrillic text into',\r\n        inputLanguageLbl: 'Input Language',\r\n        inputLanguageOptUk: 'Ukrainian',\r\n        inputLanguageOptRu: 'Russian',\r\n        outputLanguageLbl: 'Output Type',\r\n        outputLanguageOptEn: 'Englify',\r\n        outputLanguageOptCz: 'Czechify',\r\n        outputLanguageOptPl: 'Polonify',\r\n        inputLanguagePlaceholder: 'Cyrillic text here...',\r\n    },\r\n    uk: {\r\n        appLanguageLbl: 'Мова',\r\n        appLanguageOptEn: 'Англійська',\r\n        appLanguageOptUk: 'Українська',\r\n        appLanguageOptRu: 'Російська',\r\n        appTitle: 'Конвертор Кирилиці в Латинку',\r\n        bgnPcgnHelpText: 'Опція \"Англіфікувати\" сконвертує кирилицю в стандарт',\r\n        inputLanguageLbl: 'Вхідна Мова',\r\n        inputLanguageOptUk: 'Українська',\r\n        inputLanguageOptRu: 'Російська',\r\n        outputLanguageLbl: 'Вихідна Мова',\r\n        outputLanguageOptEn: 'Англіфікувати',\r\n        outputLanguageOptCz: 'Чехіфікувати',\r\n        outputLanguageOptPl: 'Полонізувати',\r\n        inputLanguagePlaceholder: 'Текст кирилицею...',\r\n    },\r\n    ru: {\r\n        appLanguageLbl: 'Язык',\r\n        appLanguageOptEn: 'Английский',\r\n        appLanguageOptUk: 'Украинский',\r\n        appLanguageOptRu: 'Русский',\r\n        appTitle: 'Конвертор Кириллицы в Латиницу',\r\n        bgnPcgnHelpText: 'Опция \"Англифицировать\" сконвертирует кириллицу в стандарт',\r\n        inputLanguageLbl: 'Входящий Язык',\r\n        inputLanguageOptUk: 'Украинский',\r\n        inputLanguageOptRu: 'Русский',\r\n        outputLanguageLbl: 'Выходящий Язык',\r\n        outputLanguageOptEn: 'Англифицировать',\r\n        outputLanguageOptCz: 'Чехифицировать',\r\n        outputLanguageOptPl: 'Полонизировать',\r\n        inputLanguagePlaceholder: 'Текст кириллицей...',\r\n    },\r\n};\r\n","export const isCharsEqual = (nextChar: string, char: string): boolean => \r\n  char.toLowerCase() == nextChar.toLowerCase();\r\n\r\nexport const isConsonant = (char: string): boolean => (\r\n    isCharsEqual(char, \"б\") ||\r\n    isCharsEqual(char, \"в\") ||\r\n    isCharsEqual(char, \"г\") ||\r\n    isCharsEqual(char, \"д\") ||\r\n    isCharsEqual(char, \"ж\") ||\r\n    isCharsEqual(char, \"з\") ||\r\n    isCharsEqual(char, \"к\") ||\r\n    isCharsEqual(char, \"л\") ||\r\n    isCharsEqual(char, \"м\") ||\r\n    isCharsEqual(char, \"н\") ||\r\n    isCharsEqual(char, \"п\") ||\r\n    isCharsEqual(char, \"р\") ||\r\n    isCharsEqual(char, \"с\") ||\r\n    isCharsEqual(char, \"т\") ||\r\n    isCharsEqual(char, \"ф\") ||\r\n    isCharsEqual(char, \"х\") ||\r\n    isCharsEqual(char, \"ц\") ||\r\n    isCharsEqual(char, \"ч\") ||\r\n    isCharsEqual(char, \"ш\") ||\r\n    isCharsEqual(char, \"щ\")\r\n  );\r\n\r\n  export const isUkInput = (text: string): boolean => {\r\n    const textInLowercase = text.toLowerCase();\r\n\r\n    return textInLowercase.indexOf('ї') !== -1 \r\n      || textInLowercase.indexOf('ґ') !== -1\r\n      || textInLowercase.indexOf('є') !== -1\r\n      || textInLowercase.indexOf('і') !== -1;\r\n  }\r\n\r\n  export const isRuInput = (text: string): boolean => {    \r\n    const textInLowercase = text.toLowerCase();\r\n\r\n    return textInLowercase.indexOf('ё') !== -1 \r\n      || textInLowercase.indexOf('ы') !== -1\r\n      || textInLowercase.indexOf('ъ') !== -1\r\n      || textInLowercase.indexOf('э') !== -1;\r\n  }","import czechifyUk from './czechify_uk';\r\nimport englifyUk from './englify_uk';\r\nimport englifyRu from './englify_ru';\r\n\r\nexport default (text: string, inputType: string, outputType: string): string => {\r\n  if (inputType === 'uk') {\r\n    switch (outputType) {\r\n      case 'cz':\r\n        return czechifyUk(text);\r\n      case 'en':\r\n        return englifyUk(text);\r\n    }    \r\n  }\r\n\r\n  if (inputType === 'ru') {\r\n    return englifyRu(text);\r\n  }\r\n\r\n  return '';\r\n}","import { isCharsEqual, isConsonant } from \"../helpers/transliteration\";\r\n\r\nexport default (text: string): string => {\r\n  let result = \"\";\r\n\r\n  for (let i = 0; i < text.length; i++) {\r\n    if (text[i] === \"Ч\") {\r\n      result += \"Č\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ч\") {\r\n      result += \"č\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"В\") {\r\n      result += \"V\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"в\") {\r\n      result += \"v\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ш\") {\r\n      result += \"Š\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ш\") {\r\n      result += \"š\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Щ\") {\r\n      result += \"Šč\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"щ\") {\r\n      result += \"šč\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ж\") {\r\n      result += \"Ž\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ж\") {\r\n      result += \"ž\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"А\") {\r\n      result += \"A\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"а\") {\r\n      result += \"a\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Б\") {\r\n      result += \"B\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"б\") {\r\n      result += \"b\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ц\") {\r\n      result += \"C\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ц\") {\r\n      result += \"c\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Х\") {\r\n      result += \"Ch\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"х\") {\r\n      result += \"ch\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Д\") {\r\n      result += \"D\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"д\") {\r\n      result += \"d\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Є\") {\r\n      result += \"Je\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"є\" && isConsonant(text[i - 1])) {\r\n      result += \"ie\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"є\") {\r\n      result += \"je\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Е\") {\r\n      result += \"E\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"е\") {\r\n      result += \"e\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ї\") {\r\n      result += \"Ji\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ї\") {\r\n      result += \"ji\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ф\") {\r\n      result += \"F\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ф\") {\r\n      result += \"f\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ґ\") {\r\n      result += \"G\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ґ\") {\r\n      result += \"g\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Г\") {\r\n      result += \"H\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"г\") {\r\n      result += \"h\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"І\") {\r\n      result += \"I\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"і\" && isCharsEqual(text[i + 1], \"й\")) {\r\n      result += \"í\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"і\") {\r\n      result += \"i\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Й\") {\r\n      result += \"J\";\r\n      continue;\r\n    }\r\n    if (\r\n      text[i] === \"й\" &&\r\n      (isCharsEqual(text[i - 1], \"и\") || isCharsEqual(text[i - 1], \"і\"))\r\n    ) {\r\n      continue;\r\n    }\r\n    if (text[i] === \"й\") {\r\n      result += \"j\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"К\") {\r\n      result += \"K\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"к\") {\r\n      result += \"k\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Л\") {\r\n      result += \"L\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"л\") {\r\n      result += \"l\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"М\") {\r\n      result += \"M\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"м\") {\r\n      result += \"m\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Н\") {\r\n      result += \"N\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"н\") {\r\n      result += \"n\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"О\") {\r\n      result += \"O\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"о\") {\r\n      result += \"o\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"П\") {\r\n      result += \"P\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"п\") {\r\n      result += \"p\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Р\") {\r\n      result += \"R\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"р\") {\r\n      result += \"r\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"С\") {\r\n      result += \"S\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"с\") {\r\n      result += \"s\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Т\") {\r\n      result += \"T\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"т\") {\r\n      result += \"t\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"У\") {\r\n      result += \"U\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"у\") {\r\n      result += \"u\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"И\") {\r\n      result += \"Y\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"и\" && isCharsEqual(text[i + 1], \"й\")) {\r\n      result += \"ý\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"и\") {\r\n      result += \"y\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"З\") {\r\n      result += \"Z\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"з\") {\r\n      result += \"z\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ю\") {\r\n      result += \"Ju\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ю\" && isConsonant(text[i - 1])) {\r\n      result += \"iu\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ю\") {\r\n      result += \"ju\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Я\") {\r\n      result += \"Ja\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"я\" && isConsonant(text[i - 1])) {\r\n      result += \"ia\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"я\") {\r\n      result += \"ja\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ь\") {\r\n      result += \"’\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"’\" || text[i] === \"'\") {\r\n      result += \"\";\r\n      continue;\r\n    }\r\n\r\n    result += text[i];\r\n  }\r\n\r\n  return result;\r\n};\r\n","import { isConsonant } from \"../helpers/transliteration\";\r\n\r\nexport default (text: string): string => {\r\n  let result = \"\";\r\n\r\n  for (let i = 0; i < text.length; i++) {\r\n    if (text[i] === \"Ч\") {\r\n      result += \"Ch\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ч\") {\r\n      result += \"ch\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"В\") {\r\n      result += \"V\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"в\") {\r\n      result += \"v\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ш\") {\r\n      result += \"Sh\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ш\") {\r\n      result += \"sh\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Щ\") {\r\n      result += \"Shch\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"щ\") {\r\n      result += \"shch\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ж\") {\r\n      result += \"Zh\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ж\") {\r\n      result += \"zh\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"А\") {\r\n      result += \"A\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"а\") {\r\n      result += \"a\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Б\") {\r\n      result += \"B\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"б\") {\r\n      result += \"b\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ц\") {\r\n      result += \"Ts\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ц\") {\r\n      result += \"ts\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Х\") {\r\n      result += \"Kh\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"х\") {\r\n      result += \"kh\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Д\") {\r\n      result += \"D\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"д\") {\r\n      result += \"d\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Є\") {\r\n      result += \"Ye\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"є\" && isConsonant(text[i - 1])) {\r\n      result += \"ie\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"є\") {\r\n      result += \"ye\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Е\") {\r\n      result += \"E\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"е\") {\r\n      result += \"e\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ї\") {\r\n      result += \"Yi\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ї\") {\r\n      result += \"yi\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ф\") {\r\n      result += \"F\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ф\") {\r\n      result += \"f\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ґ\") {\r\n      result += \"G\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ґ\") {\r\n      result += \"g\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Г\") {\r\n      result += \"H\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"г\") {\r\n      result += \"h\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"І\") {\r\n      result += \"I\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"і\") {\r\n      result += \"i\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Й\") {\r\n      result += \"Y\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"й\") {\r\n      result += \"y\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"К\") {\r\n      result += \"K\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"к\") {\r\n      result += \"k\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Л\") {\r\n      result += \"L\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"л\") {\r\n      result += \"l\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"М\") {\r\n      result += \"M\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"м\") {\r\n      result += \"m\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Н\") {\r\n      result += \"N\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"н\") {\r\n      result += \"n\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"О\") {\r\n      result += \"O\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"о\") {\r\n      result += \"o\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"П\") {\r\n      result += \"P\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"п\") {\r\n      result += \"p\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Р\") {\r\n      result += \"R\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"р\") {\r\n      result += \"r\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"С\") {\r\n      result += \"S\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"с\") {\r\n      result += \"s\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Т\") {\r\n      result += \"T\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"т\") {\r\n      result += \"t\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"У\") {\r\n      result += \"U\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"у\") {\r\n      result += \"u\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"И\") {\r\n      result += \"Y\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"и\") {\r\n      result += \"y\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"З\") {\r\n      result += \"Z\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"з\") {\r\n      result += \"z\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ю\") {\r\n      result += \"Yu\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ю\" && isConsonant(text[i - 1])) {\r\n        result += \"iu\";\r\n        continue;\r\n    }\r\n    if (text[i] === \"ю\") {\r\n      result += \"yu\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Я\") {\r\n      result += \"Ya\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"я\" && isConsonant(text[i - 1])) {\r\n        result += \"ia\";\r\n        continue;\r\n    }\r\n    if (text[i] === \"я\") {\r\n      result += \"ya\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ь\") {\r\n      result += \"'\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"’\" || text[i] === \"'\") {\r\n      result += \"\";\r\n      continue;\r\n    }\r\n\r\n    result += text[i];\r\n  }\r\n\r\n  return result;\r\n};\r\n","import { isConsonant } from \"../helpers/transliteration\";\r\n\r\nexport default (text: string): string => {\r\n  let result = \"\";\r\n\r\n  for (let i = 0; i < text.length; i++) {\r\n    if (text[i] === \"Ч\") {\r\n      result += \"Ch\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ч\") {\r\n      result += \"ch\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"В\") {\r\n      result += \"V\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"в\") {\r\n      result += \"v\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ш\") {\r\n      result += \"Sh\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ш\") {\r\n      result += \"sh\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Щ\") {\r\n      result += \"Shch\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"щ\") {\r\n      result += \"shch\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ж\") {\r\n      result += \"Zh\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ж\") {\r\n      result += \"zh\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"А\") {\r\n      result += \"A\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"а\") {\r\n      result += \"a\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Б\") {\r\n      result += \"B\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"б\") {\r\n      result += \"b\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ц\") {\r\n      result += \"Ts\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ц\") {\r\n      result += \"ts\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Х\") {\r\n      result += \"Kh\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"х\") {\r\n      result += \"kh\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Д\") {\r\n      result += \"D\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"д\") {\r\n      result += \"d\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Е\") {\r\n      result += \"Ye\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"е\" && isConsonant(text[i - 1])) {\r\n      result += \"e\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"е\") {\r\n      result += \"ye\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Э\") {\r\n      result += \"E\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"э\") {\r\n      result += \"e\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ф\") {\r\n      result += \"F\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ф\") {\r\n      result += \"f\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Г\") {\r\n      result += \"G\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"г\") {\r\n      result += \"g\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Й\") {\r\n      result += \"Y\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"й\") {\r\n      result += \"y\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"К\") {\r\n      result += \"K\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"к\") {\r\n      result += \"k\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Л\") {\r\n      result += \"L\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"л\") {\r\n      result += \"l\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"М\") {\r\n      result += \"M\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"м\") {\r\n      result += \"m\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Н\") {\r\n      result += \"N\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"н\") {\r\n      result += \"n\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"О\") {\r\n      result += \"O\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"о\") {\r\n      result += \"o\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"П\") {\r\n      result += \"P\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"п\") {\r\n      result += \"p\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Р\") {\r\n      result += \"R\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"р\") {\r\n      result += \"r\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"С\") {\r\n      result += \"S\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"с\") {\r\n      result += \"s\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Т\") {\r\n      result += \"T\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"т\") {\r\n      result += \"t\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"У\") {\r\n      result += \"U\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"у\") {\r\n      result += \"u\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"И\") {\r\n      result += \"I\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"и\") {\r\n      result += \"i\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"З\") {\r\n      result += \"Z\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"з\") {\r\n      result += \"z\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ю\") {\r\n      result += \"Yu\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ю\" && isConsonant(text[i - 1])) {\r\n        result += \"iu\";\r\n        continue;\r\n    }\r\n    if (text[i] === \"ю\") {\r\n      result += \"yu\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Я\") {\r\n      result += \"Ya\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"я\" && isConsonant(text[i - 1])) {\r\n        result += \"ia\";\r\n        continue;\r\n    }\r\n    if (text[i] === \"я\") {\r\n      result += \"ya\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ь\") {\r\n      result += \"’\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ъ\") {\r\n      result += \"’’\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ы\") {\r\n      result += \"Y\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ы\") {\r\n      result += \"y\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"Ё\") {\r\n      result += \"Yё\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ё\" && isConsonant(text[i - 1])) {\r\n      result += \"ё\";\r\n      continue;\r\n    }\r\n    if (text[i] === \"ё\") {\r\n      result += \"yё\";\r\n      continue;\r\n    }\r\n\r\n    result += text[i];\r\n  }\r\n\r\n  return result;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport transliterate from '../transliterate';\r\nimport { isUkInput, isRuInput } from '../helpers/transliteration';\r\n\r\nconst FormBlock = (): JSX.Element => {\r\n    const [textToTransliterate, setTextToTransliterate] = useState('');\r\n    const [inputType, setInputType] = useState('uk');\r\n    const [outputType, setOutputType] = useState('en');\r\n    const [output, setOutput] = useState('');\r\n\r\n    const intl = useIntl();\r\n\r\n    useEffect(() => {\r\n        setOutput(transliterate(textToTransliterate, inputType, outputType));\r\n    }, [textToTransliterate, inputType, outputType]);\r\n\r\n    useEffect(() => {\r\n        isRuInput(textToTransliterate) && setInputType('ru');\r\n        isUkInput(textToTransliterate) && setInputType('uk');\r\n    }, [textToTransliterate]);\r\n\r\n    const handleTextChange = (\r\n        event: React.ChangeEvent<HTMLTextAreaElement>\r\n    ) => {\r\n        const target = event.target as HTMLTextAreaElement;\r\n        setTextToTransliterate(target.value);\r\n    };\r\n\r\n    const handleInputTypeChange = (\r\n        event: React.ChangeEvent<HTMLSelectElement>\r\n    ) => {\r\n        const target = event.target as HTMLSelectElement;\r\n        setInputType(target.value);\r\n    };\r\n\r\n    const handleOutputTypeChange = (\r\n        event: React.ChangeEvent<HTMLSelectElement>\r\n    ) => {\r\n        const target = event.target as HTMLSelectElement;\r\n        setOutputType(target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                <p>\r\n                    <label htmlFor='inputType'>\r\n                        <FormattedMessage id='inputLanguageLbl' />:\r\n                    </label>\r\n                    &nbsp;\r\n                    <select\r\n                        id='inputType'\r\n                        value={inputType}\r\n                        onChange={handleInputTypeChange}\r\n                    >\r\n                        <FormattedMessage id='inputLanguageOptUk'>\r\n                            {message => <option value='uk'>{message}</option>}\r\n                        </FormattedMessage>\r\n                        <FormattedMessage id='inputLanguageOptRu'>\r\n                            {message => <option value='ru'>{message}</option>}\r\n                        </FormattedMessage>\r\n                    </select>\r\n                </p>\r\n                <p>\r\n                    <label htmlFor='outputType'>\r\n                        <FormattedMessage id='outputLanguageLbl' />:{' '}\r\n                    </label>\r\n                    &nbsp;\r\n                    <select\r\n                        id='outputType'\r\n                        value={outputType}\r\n                        onChange={handleOutputTypeChange}\r\n                        disabled={inputType === 'ru'}\r\n                    >\r\n                        <FormattedMessage id='outputLanguageOptEn'>\r\n                            {message => <option value='en'>{message}</option>}\r\n                        </FormattedMessage>\r\n                        {inputType === 'uk' && (\r\n                            <>\r\n                                <FormattedMessage id='outputLanguageOptCz'>\r\n                                    {message => (\r\n                                        <option value='cz'>{message}</option>\r\n                                    )}\r\n                                </FormattedMessage>\r\n                                <FormattedMessage id='outputLanguageOptPl'>\r\n                                    {message => (\r\n                                        <option value='pl' disabled>\r\n                                            {message}\r\n                                        </option>\r\n                                    )}\r\n                                </FormattedMessage>\r\n                            </>\r\n                        )}\r\n                    </select>\r\n                </p>\r\n                <textarea\r\n                    onChange={handleTextChange}\r\n                    value={textToTransliterate}\r\n                    placeholder={intl.formatMessage({\r\n                        id: 'inputLanguagePlaceholder',\r\n                    })}\r\n                />\r\n            </form>\r\n            <pre>{output}</pre>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormBlock;\r\n","import React, { useState } from 'react';\r\nimport { IntlProvider, FormattedMessage } from 'react-intl';\r\nimport msgs from '../messages';\r\nimport FormBlock from './FormBlock';\r\n\r\nexport const App = (): JSX.Element => {\r\n    const [appLanguage, setAppLanguage] = useState('en');\r\n\r\n    const handleAppLanguageChange = (\r\n        event: React.ChangeEvent<HTMLSelectElement>\r\n    ) => {\r\n        const target = event.target as HTMLSelectElement;\r\n        setAppLanguage(target.value);\r\n    };\r\n\r\n    const messages =\r\n        appLanguage === 'en'\r\n            ? msgs.en\r\n            : appLanguage === 'uk'\r\n            ? msgs.uk\r\n            : msgs.ru;\r\n\r\n    return (\r\n        <IntlProvider\r\n            messages={messages}\r\n            locale={appLanguage}\r\n            defaultLocale='en'\r\n        >\r\n            <div>\r\n                <header>\r\n                    <label htmlFor='appLanguage'>\r\n                        <FormattedMessage id='appLanguageLbl' />\r\n                        :&nbsp;\r\n                    </label>\r\n                    <select\r\n                        id='appLanguage'\r\n                        value={appLanguage}\r\n                        onChange={handleAppLanguageChange}\r\n                    >\r\n                        <FormattedMessage id='appLanguageOptEn'>\r\n                            {message => <option value='en'>{message}</option>}\r\n                        </FormattedMessage>\r\n                        <FormattedMessage id='appLanguageOptUk'>\r\n                            {message => <option value='uk'>{message}</option>}\r\n                        </FormattedMessage>\r\n                        <FormattedMessage id='appLanguageOptRu'>\r\n                            {message => <option value='ru'>{message}</option>}\r\n                        </FormattedMessage>\r\n                    </select>\r\n                    <h2>\r\n                        <FormattedMessage id='appTitle' />\r\n                    </h2>\r\n                </header>\r\n                <main>\r\n                    <p>\r\n                        <FormattedMessage id='bgnPcgnHelpText' /> &nbsp;\r\n                        <a\r\n                            target='_blank'\r\n                            href='https://en.wikipedia.org/wiki/BGN/PCGN_romanization'\r\n                        >\r\n                            BGN/PCGN\r\n                        </a>\r\n                    </p>\r\n                    <FormBlock />\r\n                </main>\r\n            </div>\r\n        </IntlProvider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { App } from \"./components/App\";\r\nimport \"./style.css\";\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}